{
    "class": "go.GraphLinksModel",
    "dataFormat": "flow-1",
    "nodeKeyProperty": "id",
    "nodeCategoryProperty": "class",
    "linkFromPortIdProperty": "fromPort",
    "linkToPortIdProperty": "toPort",
    "nodeDataArray": [
        {
            "class": "Flow.Begin",
            "name": "Begin",
            "loc": "-317.1319071403639 -654.9717375",
            "id": "943fb90c-8699-4eb6-9de1-a1cddc841c94",
            "options": {
                "inputParameters": [
                    "()=>{",
                    "  return {",
                    "//    parm1: 'parm1_default_value',",
                    "//    parm2: 'parm2_default_value'",
                    "  };",
                    "}"
                ]
            },
            "clazz": "Flow.Begin"
        },
        {
            "class": "Mim.Question",
            "clazz": "Mim.Question",
            "asset-pack": "core",
            "loc": "-377.6739482703699 -280.7163708531541",
            "id": "35c46a37-f6ee-49e6-bf50-21284f463d49",
            "options": {
                "mimPath": "mims/en-us/oobe/cloqq_init.mim",
                "getPromptData": [
                    "() => {",
                    "\treturn {};",
                    "}",
                    "",
                    ""
                ],
                "onStatus": [
                    "(status) => {",
                    "\tlet mimState = status.state;",
                    "\tlet asrResults = status.asrResults;",
                    "}"
                ],
                "onSuccess": [
                    "(results) => {",
                    "\tlet mimState = results.state;",
                    "\tlet asrResults = results.asrResults;",
                    "\tlet transition = results.firstGrammarTag;",
                    "\t// Get the 'cmd' from the rule",
                    "\tnotepad.Command = asrResults.NLParse.cmd;",
                    "\tblackboard.Command = notepad.Command;",
                    "\tconsole.log(\"<<cloqq_init>> cmd:\" + notepad.Command);",
                    "\t// Check if there is a 'num' too",
                    "\tvar len = Object.keys(asrResults.NLParse).length",
                    "\tif ( len > 1) {",
                    "\t\tvar s = asrResults.NLParse.num;",
                    "\t\tswitch (s) {",
                    "\t\t\tcase 'one':",
                    "\t\t\t\tnotepad.num = 1;",
                    "\t\t\t\tbreak;",
                    "\t\t\tcase 'two':",
                    "\t\t\t\tnotepad.num = 2;",
                    "\t\t\t\tbreak;",
                    "\t\t\tcase 'three':",
                    "\t\t\t\tnotepad.num = 3;",
                    "\t\t\t\tbreak;",
                    "\t\t\tcase 'four':",
                    "\t\t\t\tnotepad.num = 4;",
                    "\t\t\t\tbreak;",
                    "\t\t\tcase 'five':",
                    "\t\t\t\tnotepad.num = 5;",
                    "\t\t\t\tbreak;",
                    "\t\t}\t",
                    "\t\tconsole.log(\"<<cloqq_init>> num: \" + s);",
                    "\t\tnotepad.numFlag = true;",
                    "\t}",
                    "\t",
                    "\treturn transition;",
                    "\t",
                    "}",
                    "//Transitions: undefined",
                    ""
                ],
                "onFailure": [
                    "(results) => {",
                    "\tlet mimState = results.state;",
                    "\tlet asrResults = results.asrResults;",
                    "\tlet exception = results.exception;",
                    "\treturn exception;",
                    "}"
                ]
            },
            "name": "cloqq_init",
            "size": "208.52284749830795 49"
        },
        {
            "class": "Mim.Announcement",
            "clazz": "Mim.Announcement",
            "asset-pack": "core",
            "loc": "-31.88910166130941 -426.2000756623061",
            "id": "3c613b0e-b7ca-40ad-b9d0-8d09548752f1",
            "options": {
                "mimPath": "mims/en-us/oobe/AW_step.mim",
                "getPromptData": [
                    "() => {",
                    "\tvar action = notepad.Command;",
                    "\t// var action = \"\";",
                    "\tvar request = require('request');",
                    "\tvar TOKEN = \"lzSML0kfMeEysMPzdmnclVdqI7TETCA1UulEJ9tRJswdKtaOGpVxWh8M74dz3tWDTmft96To7M9T2qcCTOTkQyHDZ2c40DZDdqwqVssu2reqxhmIOZC6STJQhkvzKnEy7gaf1vlxNBbWJ3Zs2F8hnL\";",
                    "\tvar robotId = \"cad342b9-27cb-40fe-806d-640a78673cbb\";",
                    "\tvar robotToken = \"c59e3ff0-89cc-4d9a-ba4e-595bc306817e\";",
                    "\tvar num = 0;",
                    "\t// Tranaslate the string number to int (UGLY for now!)----------",
                    "\tif (notepad.numFlag == true) {",
                    "\t\tnum = notepad.num;",
                    "\t}",
                    "\t// UGKY UGLY UGLY.. I know.. ------------------------------------ ",
                    "\t",
                    "\tif (action == \"go_to_next_step\") {",
                    "\t\tnotepad.step_transition = \"True\";",
                    "\t\tnotepad.stepNo += 1;",
                    "\t}else if (action == \"go_to_previous_step\") {",
                    "\t\tnotepad.step_transition = \"True\";",
                    "\t\tnotepad.stepNo -= 1;",
                    "\t}else if (action == \"next_n_steps\") {",
                    "\t\tnotepad.step_transition = \"True\";\t",
                    "\t\tnotepad.stepNo += num;",
                    "\t}else if (action == \"previous_n_steps\") {",
                    "\t\tnotepad.step_transition = \"True\";",
                    "\t\tnotepad.stepNo -= num;",
                    "\t}else if (action == \"repeat\") {",
                    "\t\tnotepad.step_transition = \"True\";",
                    "\t}",
                    "\tconsole.log(\"<<AW>> Step No: \" + notepad.stepNo);",
                    "\tconsole.log(\"<<AW>> Action: \" + action);",
                    "\tvar options = {",
                    "\t\turi: 'https://cloud.augmentedworkforce.com/cloqq/execute/',",
                    "\t\tmethod: 'POST',",
                    "\t  json: {",
                    "\t    \"robot_id\" : robotId,",
                    "\t    \"robot_token\" : robotToken,",
                    "\t    \"cloqq_access_token\" : TOKEN,",
                    "\t    \"actions\" : [{\"name\": action},],",
                    "\t  }",
                    "\t};",
                    "\t// Add the num parameter in the json (for n-steps case)",
                    "\tif (notepad.numFlag == true) {",
                    "\t\toptions.json.actions = [{",
                    "    \t\t\"name\" : action,",
                    "    \t\t\"parameter\" : {\"n\" : num}",
                    "    }];",
                    "\t}",
                    "\t// Make the request",
                    "\trequest(options, function (error, response, body) {",
                    "\t  if (!error && response.statusCode == 200) {",
                    "\t    console.log(body.id) // Print the shortened url.",
                    "\t  }",
                    "\t});\t",
                    "\t",
                    "\treturn {};",
                    "}",
                    "",
                    ""
                ]
            },
            "name": "AW",
            "size": "106 46"
        },
        {
            "class": "Flow.Eval",
            "clazz": "Flow.Eval",
            "asset-pack": "core",
            "loc": "-15.264756132329296 -288.2163708531541",
            "id": "82b49250-6809-4664-b0df-18524a4781a0",
            "options": {
                "Script": [
                    "() => {",
                    " var step = notepad.stepNo;",
                    " var cmd = notepad.Command;",
                    " console.log(\"Check_step: >>> \");",
                    " console.log(step);",
                    " var transition = \"\";",
                    " ",
                    " if (notepad.step_transition == \"True\") {",
                    "   if (step == 1) {",
                    "     transition = \"s1\";",
                    "     notepad.transition = \"s1\";",
                    "   }else if (step == 2) {",
                    "     transition = \"s2\";",
                    "     notepad.transition = \"s2\";",
                    "   }else if (step == 3) {",
                    "     transition = \"s3\";",
                    "     notepad.transition = \"s3\";",
                    "   }else if (step == 4) {",
                    "     transition = \"s4\";",
                    "     notepad.transition = \"s4\";",
                    "   }else if (step == 5) {",
                    "     transition = \"s5\";",
                    "     notepad.transition = \"s5\";",
                    "   }",
                    " }",
                    "   if (cmd == \"expand_image\") {",
                    "    transition = \"aux\";",
                    "    notepad.transition = 'aux';",
                    " }",
                    " notepad.step_transition = \"False\";",
                    " return transition;",
                    "}"
                ]
            },
            "name": "check_step",
            "size": "221 64"
        },
        {
            "class": "Flow.Eval",
            "clazz": "Flow.Eval",
            "asset-pack": "core",
            "loc": "-312.70453389244756 -443.1421797524109",
            "id": "16574095-2299-4f49-88de-c677f7dce395",
            "options": {
                "Script": [
                    "() => {",
                    "    notepad.stepNo = 1;",
                    "    notepad.Command = \"\";",
                    "    notepad.num = 0;",
                    "    notepad.numFlag = false;",
                    "    notepad.setp1 = 'a';",
                    "    notepad.step_transition = \"False\";",
                    "    notepad.transition = \"\";",
                    "    blackboard.Command = \"\";",
                    "    return '';",
                    "}"
                ]
            },
            "name": "Init"
        },
        {
            "class": "Flow.Catch",
            "clazz": "Flow.Catch",
            "asset-pack": "core",
            "loc": "-155.78760363063725 -507",
            "id": "fc97f657-2fdc-41a5-80f8-5d4202161c16",
            "options": {
                "getTransition": [
                    "(exception, payload) => {",
                    "\treturn '';",
                    "}"
                ]
            },
            "name": "~InteractionError"
        },
        {
            "class": "Flow.Subflow",
            "clazz": "Flow.Subflow",
            "asset-pack": "core",
            "loc": "-127.39641405544194 -169",
            "id": "201f444b-754c-4087-a85c-5a7509e089c5",
            "options": {
                "subflowId": "./animation",
                "inputParameters": [
                    "()=>{",
                    "  return {",
                    "   step: notepad.transition",
                    "//    parm2: 'parm2_default_value'",
                    "  };",
                    "}"
                ],
                "getTransition": [
                    "(subflow_result_object) => {",
                    "    return subflow_result_object.transition;",
                    "}"
                ]
            },
            "name": "animation"
        },
        {
            "class": "PlayAnimation",
            "clazz": "PlayAnimation",
            "asset-pack": "core",
            "loc": "-144.06141497096928 -284.1874228982065",
            "id": "bb282e8e-3b54-46ab-ad28-8875bd26f6ad",
            "options": {
                "animPath": "image.keys",
                "cache": true,
                "upload": true,
                "config": [
                    "(animation) => {",
                    "}"
                ]
            },
            "name": "Expand"
        },
        {
            "class": "Flow.Eval",
            "clazz": "Flow.Eval",
            "asset-pack": "core",
            "loc": "192.890625 -528.1245513916016",
            "id": "9593db42-b237-4dd1-9017-d29d735dec91",
            "options": {
                "Script": [
                    "() => {",
                    "    notepad.lookAtPosition = {x: 0, y: 0, z: 0.5};",
                    "    return '';",
                    "}"
                ]
            },
            "name": "init2"
        },
        {
            "class": "LookAt",
            "clazz": "LookAt",
            "asset-pack": "core",
            "loc": "199.10807037353516 -443.1421797524109",
            "id": "43697259-5155-40b8-b1ae-329cee85e2d5",
            "options": {
                "getTarget": [
                    "() => {",
                    "   ",
                    "   let jibo = require('jibo');",
                    "   let entity = jibo.lps.getClosestAudibleEntity();",
                    "  //  let entity = jibo.lps.getClosestVisualEntity();",
                    "",
                    "   // valid if we have data and confidence is at least 0.6",
                    "   let valid = (entity !== undefined && entity.confidence >= 0.2);",
                    "",
                    "   if (valid) {",
                    "       //console.log(`valid entity: `, entity);",
                    "       let pos = entity.position;",
                    "       notepad.heardInitResponse = true;",
                    "       pos = new jibo.animate.THREE.Vector3(pos.x, pos.y, pos.z);",
                    "       pos.normalize();",
                    " ",
                    "       let newZ = pos.z;",
                    "       if (newZ > 0.6) {",
                    "           newZ = 0.6;",
                    "       }",
                    "       if (newZ < 0.3) {",
                    "           newZ = 0.3;",
                    "       }",
                    "",
                    "       notepad.lookAtPosition = {x: pos.x, y:pos.y, z: newZ};",
                    "",
                    "       console.log(`Heard you with ${entity.confidence} at ${notepad.lookAtPosition.x.toPrecision(3)}, ${notepad.lookAtPosition.y.toPrecision(3)}, ${notepad.lookAtPosition.z.toPrecision(3)}`);",
                    "   } else {",
                    "       let confid = undefined;",
                    "       if (entity) {",
                    "           confid = entity.confidence;",
                    "       }",
                    "",
                    "       //console.log(`Conf=${confid} Can't hear you :(`);",
                    "   }",
                    "  ",
                    "   return notepad.lookAtPosition;",
                    "}"
                ],
                "isContinuous": false,
                "config": [
                    "(lookAt) => {",
                    "}"
                ]
            },
            "name": ""
        },
        {
            "class": "Flow.Eval",
            "clazz": "Flow.Eval",
            "asset-pack": "core",
            "loc": "318.890625 -443.1421797524109",
            "id": "3e8879ca-82d1-4089-a428-1b574ea1d3c0",
            "options": {
                "Script": [
                    "() => {",
                    "  return '';",
                    "}"
                ]
            },
            "name": ""
        },
        {
            "class": "Flow.Begin-Parallel",
            "clazz": "Flow.Begin-Parallel",
            "asset-pack": "core",
            "loc": "188.46325175208366 -673",
            "id": "e12815a7-19b9-4d47-a595-13cd10fe02cc",
            "options": {},
            "name": ""
        }
    ],
    "linkDataArray": [
        {
            "from": "3c613b0e-b7ca-40ad-b9d0-8d09548752f1",
            "to": "82b49250-6809-4664-b0df-18524a4781a0",
            "fromPort": "",
            "toPort": "",
            "text": "",
            "toSpot": {
                "class": "go.Spot",
                "x": 0.18653251600145065,
                "y": 0,
                "offsetX": 0,
                "offsetY": 0
            },
            "segmentOffset": "19.84499999999997 0",
            "fromSpot": {
                "class": "go.Spot",
                "x": 0.5468606288802774,
                "y": 1,
                "offsetX": 0,
                "offsetY": 0
            }
        },
        {
            "from": "35c46a37-f6ee-49e6-bf50-21284f463d49",
            "to": "3c613b0e-b7ca-40ad-b9d0-8d09548752f1",
            "fromPort": "",
            "toPort": "",
            "text": "",
            "toSpot": {
                "class": "go.Spot",
                "x": 0,
                "y": 0.46918642744143474,
                "offsetX": 0,
                "offsetY": 0
            },
            "fromSpot": {
                "class": "go.Spot",
                "x": 0.8676717210057189,
                "y": 0,
                "offsetX": 0,
                "offsetY": 0
            }
        },
        {
            "from": "fc97f657-2fdc-41a5-80f8-5d4202161c16",
            "to": "35c46a37-f6ee-49e6-bf50-21284f463d49",
            "fromPort": "",
            "toPort": "",
            "text": "",
            "toSpot": {
                "class": "go.Spot",
                "x": 0.7320939892287278,
                "y": 0,
                "offsetX": 0,
                "offsetY": 0
            },
            "fromSpot": {
                "class": "go.Spot",
                "x": 0,
                "y": 0.5195005503952305,
                "offsetX": 0,
                "offsetY": 0
            }
        },
        {
            "from": "82b49250-6809-4664-b0df-18524a4781a0",
            "to": "201f444b-754c-4087-a85c-5a7509e089c5",
            "fromPort": "",
            "toPort": "",
            "text": ""
        },
        {
            "from": "201f444b-754c-4087-a85c-5a7509e089c5",
            "to": "35c46a37-f6ee-49e6-bf50-21284f463d49",
            "fromPort": "",
            "toPort": "",
            "text": "",
            "fromSpot": {
                "class": "go.Spot",
                "x": 0,
                "y": 0.5720199574270258,
                "offsetX": 0,
                "offsetY": 0
            }
        },
        {
            "from": "82b49250-6809-4664-b0df-18524a4781a0",
            "to": "bb282e8e-3b54-46ab-ad28-8875bd26f6ad",
            "fromPort": "",
            "toPort": "",
            "text": "aux",
            "fromSpot": {
                "class": "go.Spot",
                "x": 0,
                "y": 0.5033807945805329,
                "offsetX": 0,
                "offsetY": 0
            }
        },
        {
            "from": "bb282e8e-3b54-46ab-ad28-8875bd26f6ad",
            "to": "35c46a37-f6ee-49e6-bf50-21284f463d49",
            "fromPort": "",
            "toPort": "",
            "text": ""
        },
        {
            "from": "16574095-2299-4f49-88de-c677f7dce395",
            "to": "35c46a37-f6ee-49e6-bf50-21284f463d49",
            "fromPort": "",
            "toPort": "",
            "text": "",
            "toSpot": {
                "class": "go.Spot",
                "x": 0.46878351433966065,
                "y": 0,
                "offsetX": 0,
                "offsetY": 0
            }
        },
        {
            "from": "9593db42-b237-4dd1-9017-d29d735dec91",
            "to": "43697259-5155-40b8-b1ae-329cee85e2d5",
            "fromPort": "",
            "toPort": "",
            "text": ""
        },
        {
            "from": "43697259-5155-40b8-b1ae-329cee85e2d5",
            "to": "3e8879ca-82d1-4089-a428-1b574ea1d3c0",
            "fromPort": "",
            "toPort": "",
            "text": ""
        },
        {
            "from": "3e8879ca-82d1-4089-a428-1b574ea1d3c0",
            "to": "43697259-5155-40b8-b1ae-329cee85e2d5",
            "fromPort": "",
            "toPort": "",
            "text": ""
        },
        {
            "from": "e12815a7-19b9-4d47-a595-13cd10fe02cc",
            "to": "9593db42-b237-4dd1-9017-d29d735dec91",
            "fromPort": "",
            "toPort": ""
        },
        {
            "from": "943fb90c-8699-4eb6-9de1-a1cddc841c94",
            "to": "16574095-2299-4f49-88de-c677f7dce395",
            "fromPort": "",
            "toPort": ""
        }
    ]
}